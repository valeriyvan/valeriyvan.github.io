---
layout: post
title:  "Read Popovers, UINavigationController, and preferredContentSize and a lot of other interesting stuff"
date:   2019-10-08 19:08:00 +0200
categories: [Swift, iOS, UINavigationController, Popovers, preferredContentSize, UICollectionViewCompositionalLayout, Caching, SwiftErrorHandler]
---
Switched to use [Catalina](https://www.apple.com/macos/catalina/) and after first minutes found out [bash](https://en.wikipedia.org/wiki/Bash_(Unix_shell)) got retired and I have to [learn to use zsh](https://support.apple.com/en-us/HT208050). Note to future self: just remember to set the shebang in your scripts to `#!/bin/zsh` - taken from [Moving to zsh](https://scriptingosx.com/2019/06/moving-to-zsh/).

Read [The MAESTRO Dataset and Wave2Midi2Wave](https://magenta.tensorflow.org/maestro-wave2midi2wave).

Read [Popovers, UINavigationController, and preferredContentSize](https://noahgilmore.com/blog/popover-uinavigationcontroller-preferredcontentsize/).

Passed over [Trouble with form fields in iOS apps](http://aplus.rs/2019/trouble-with-ios-forms/) which has short overview of libraries to build forms. Then passed over follow-up [Modeling form field](http://aplus.rs/2019/modeling-form-field/).

Passed over [All you need to know about `UICollectionViewCompositionalLayout`](https://medium.com/flawless-app-stories/all-what-you-need-to-know-about-uicollectionviewcompositionallayout-f3b2f590bdbe).

Passed over [Less… Is More? Apple’s Inconsistent Ellipsis Icons Inspire User Confusion](https://tidbits.com/2019/08/30/less-is-more-apples-inconsistent-ellipses-icons-inspire-user-confusion/).

Read [Caching in Swift](https://www.swiftbysundell.com/articles/caching-in-swift/) by John Sundell.

Bookmarking [Puma - a set of build utilities to automate mobile application development and deployment](https://github.com/pumaswift/Puma).

Browsed [The Comprehensive Guide to iOS Context Menus](https://kylebashour.com/posts/context-menu-guide) - in iOS 13, context menus replace 3D Touch peek & pop. And it's really comprehensive with many examples.

Bookmarking [SwiftErrorHandler](https://github.com/stefanrenne/SwiftErrorHandler/) which might get useful soon. SwiftErrorHandler enables expressing complex error handling logic with a few lines of code using a memorable fluent API.

Passed over [Writing an Elegant and Extensible Network Stack in Swift](https://medium.com/device-blogs/writing-an-elegant-and-extensible-network-stack-in-swift-e2f5d9ab3ea9).
