---
layout: post
title:  "TIL `NSHost`/`CFHost`/`Host`; Watched Swift Talk #116 Building a Custom XML Decoder; Read Diseconomies of Scale and Lines of Code"
date:   2019-05-14 19:14:00 +0200
categories: [Swift, iOS, macOS, Foundation, NSHost, CFHost, Host, PluggableAppDelegate, XML, LilyPond, architecture, estimate, MVC]
---
Exploring Swift Foundation came across [`Host` class aka `NSHost`](https://github.com/apple/swift-corelibs-foundation/blob/master/Foundation/Host.swift). What? Why a have never heard of it? I remember using something [lowlevel like this](https://zachwaugh.com/posts/programmatically-retrieving-ip-address-of-iphone) a couple of years ago. Well, for whatever reason `NSHost`/`Host` isn't available on iOS. But `CFHost` is. Good to know. One more interesting finding. `Host()` just crashes. Documentation says:

> To create an `Host` object, use the `current()`, `init(address:)`, or `init(name:)` class methods (don’t use `alloc` and `init`).

Why then `init` is public if it shouldn't be called and just crashes if called?

Should use this in my next app [PluggableAppDelegate](https://github.com/pchelnikov/PluggableAppDelegate) as AppDelegate replacement.

Watched [Swift Talk #116 Building a Custom XML Decoder (Part 2)](https://talk.objc.io/episodes/S01E116-building-a-custom-xml-decoder-part-2).

Read [LilyPond architecture](http://lilypond.org/doc/v2.19/Documentation/contributor/overview-of-lilypond-architecture). And bookmarked Erik Sandberg’s master’s thesis [Separating input language and formatter in GNU LilyPond](http://lilypond.org/website/pdf/thesis-erik-sandberg.pdf) for further reading.

Trying to give estimate for complex project I am about to start jumped to [Diseconomies of Scale and Lines of Code](https://blog.codinghorror.com/diseconomies-of-scale-and-lines-of-code/).

TODO: [Dave DeLong's posts A Better MVC](https://davedelong.com/blog/tags/a-better-mvc/) + [accompanying repo](https://github.com/davedelong/MVCTodo).
